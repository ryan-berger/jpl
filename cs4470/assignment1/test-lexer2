#!/usr/bin/env perl

use strict;
use warnings;
use autodie;
use File::Spec;

my $compiler = $ARGV[0];
die "specify the compiler" unless defined $compiler;
#die "can't execute compiler '${compiler}'" unless -x $compiler;

my $exe = File::Spec->rel2abs($0);
die unless ($exe =~ /^(.*)\/test\-lexer2$/);
my $testdir = "${1}/lexer-tests2";
print "$testdir\n";

my @ok = glob "$testdir/ok/*.jpl";
my @error = glob "$testdir/error/*.jpl";

my $fails = 0;

sub test($$) {
    (my $lref, my $expect) = @_;
    my @files = @{$lref};
    foreach my $f (@files) {
        print "$f : ";
        my $ok = 0;
        my $error = 0;
        my $command = "${compiler} -l $f";
        open my $INF, "${command} |" or die;
        while (my $line = <$INF>) {
            $ok++ if ($line =~ /Compilation succeeded/);
            $error++ if ($line =~ /Compilation failed/);
        }
        # close $INF or 1;
        if (($ok + $error) == 1) {
            if ($expect == 0) {
                if ($ok == 1) {
                    print "pass\n";
                } else {
                    print "fail: file should have lexed\n";
                    $fails++;
                }
            } else {
                if ($error == 1) {
                    print "pass\n";
                } else {
                    print "fail: file should *not* have lexed\n";
                    $fails++;
                }
            }
        } else {
            $fails++;
            print "test failed: no success/failure string found in compiler output\n";
        }
    }
}

test(\@ok, 0);
test(\@error, 1);

print "\n";

if ($fails == 0) {
    print "All tests pass.\n";
} else {
    print "${fails} tests fail.\n";
}

