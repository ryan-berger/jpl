// OK

/* Example 5: Convert image to grayscale.
 * https://en.wikipedia.org/wiki/Grayscale
 */

fn gamma_decompress(x : float) : float {
   assert (0.0 <= x) && (x <= 1.0), "gamma_decompress argument out of range"
   return \
     if (x <= 0.04045) then (x / 12.92) else \
     pow((x + 0.055) / 1.055, 2.4)
}

fn gamma_compress(x : float) : float {
   assert (0.0 <= x) && (x <= 1.0), "gamma_decompress argument out of range"
   return pow(x, 2.2)
}

fn grayscale_pixel({r : float, g : float, b : float, a : float}) : {float,float,float,float} {
   let r_linear = gamma_decompress(r)
   let g_linear = gamma_decompress(g)
   let b_linear = gamma_decompress(b)
   let y_linear = (0.2126 * r_linear )+ (0.7152 * g_linear) + (0.0722 * b_linear)
   let y = gamma_compress(y_linear)
   return {y, y, y, 1.0}
}

read image "photo.png" to photo_image[W, H]
let grayscale_image = array[i : W, j : H] grayscale_pixel(photo_image[i,j])
write image grayscale_image to "photo_gray.png"
