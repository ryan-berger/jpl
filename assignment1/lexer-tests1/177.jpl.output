NEWLINE
FN 'fn'
VARIABLE 'gradient'
LPAREN '('
VARIABLE 'i'
COLON ':'
VARIABLE 'int'
COMMA ','
VARIABLE 'j'
COLON ':'
VARIABLE 'int'
COMMA ','
VARIABLE 'W'
COLON ':'
VARIABLE 'int'
COMMA ','
VARIABLE 'H'
COLON ':'
VARIABLE 'int'
RPAREN ')'
COLON ':'
LCURLY '{'
VARIABLE 'float'
COMMA ','
VARIABLE 'float'
COMMA ','
VARIABLE 'float'
COMMA ','
VARIABLE 'float'
RCURLY '}'
LCURLY '{'
NEWLINE
RETURN 'return'
LCURLY '{'
VARIABLE 'float'
LPAREN '('
VARIABLE 'i'
BINOP '+'
VARIABLE 'j'
RPAREN ')'
BINOP '/'
VARIABLE 'float'
LPAREN '('
VARIABLE 'W'
BINOP '+'
VARIABLE 'H'
RPAREN ')'
COMMA ','
VARIABLE 'float'
LPAREN '('
VARIABLE 'i'
BINOP '-'
VARIABLE 'j'
BINOP '+'
VARIABLE 'H'
RPAREN ')'
BINOP '/'
VARIABLE 'float'
LPAREN '('
VARIABLE 'W'
BINOP '+'
VARIABLE 'H'
RPAREN ')'
COMMA ','
FLOATVAL '0.0'
COMMA ','
FLOATVAL '1.0'
RCURLY '}'
NEWLINE
RCURLY '}'
NEWLINE
LET 'let'
LCURLY '{'
VARIABLE 'W'
COMMA ','
VARIABLE 'H'
RCURLY '}'
EQUALS '='
LCURLY '{'
INTVAL '800'
COMMA ','
INTVAL '600'
RCURLY '}'
NEWLINE
TIME 'time'
LET 'let'
VARIABLE 'gradient_image'
EQUALS '='
ARRAY 'array'
LSQUARE '['
VARIABLE 'i'
COLON ':'
VARIABLE 'W'
COMMA ','
VARIABLE 'j'
COLON ':'
VARIABLE 'H'
RSQUARE ']'
VARIABLE 'gradient'
LPAREN '('
VARIABLE 'i'
COMMA ','
VARIABLE 'j'
COMMA ','
VARIABLE 'W'
COMMA ','
VARIABLE 'H'
RPAREN ')'
NEWLINE
WRITE 'write'
VARIABLE 'image'
VARIABLE 'gradient_image'
TO 'to'
STRING '"gradient.png"'
NEWLINE
END_OF_FILE
Compilation succeeded
